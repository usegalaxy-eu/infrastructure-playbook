#SPDX-License-Identifier: MIT-0
---
- name: Get passwd database on target to find user home directories
  ansible.builtin.getent:
    database: passwd
  register: getent_passwd_result
#  delegate_to: "{{ target_host | default(omit) }}"

- name: Find applicable SSH roles
  block:
    - name: Initialize list of applicable roles
      ansible.builtin.set_fact:
        applicable_roles: []

    - name: Append role to the list if it applies to the current host
      ansible.builtin.set_fact:
        applicable_roles: "{{ applicable_roles + [item] }}"
      loop: "{{ ssh_roles }}"
      when: inventory_hostname in item.hosts

- name: Initialize user_keys_map
  ansible.builtin.set_fact:
    user_keys_map: {}
#  delegate_to: "{{ target_host | default(omit) }}"

- name: Collect all target users from applicable roles
  ansible.builtin.set_fact:
    all_target_users: >-
      {{ applicable_roles
         | map(attribute='users')
         | flatten
         | unique
         | list }}
  #delegate_to: "{{ target_host | default(omit) }}"

- name: Process each applicable role to collect keys per user
  ansible.builtin.include_tasks: collect_role_keys.yml
  loop: "{{ applicable_roles }}"
  loop_control:
    loop_var: current_role
  when: applicable_roles | length > 0

- name: Apply collected keys to each target user
  ansible.builtin.include_tasks: apply_keys_to_user.yml
  loop: "{{ all_target_users }}"
  loop_control:
    loop_var: target_user
  when:
    - all_target_users | length > 0
    - target_user in user_keys_map
    - user_keys_map[target_user] | length > 0
