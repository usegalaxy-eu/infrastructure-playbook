---
- name: Check for bashrc
  stat:
    path: "{{ galaxy_user.home }}/.bashrc"
  register: bashrc_stat_out

- name: Copy default bashrc when not existing
  copy:
    src: /etc/skel/.bashrc
    dest: "{{ galaxy_user.home }}/.bashrc"
    remote_src: yes
    mode: 0640
    owner: "{{ galaxy_user.name }}"
    group: "{{ galaxy_group.name | default(galaxy_group) }}"
  when: not bashrc_stat_out.stat.exists

- name: Check for bashprofile
  stat:
    path: "{{ galaxy_user.home }}/.bash_profile"
  register: bashprofile_stat_out

- name: Check for profile
  stat:
    path: "{{ galaxy_user.home }}/.profile"
  register: profile_stat_out

- name: Copy default bashprofile when not existing
  copy:
    src: /etc/skel/.bash_profile
    dest: "{{ galaxy_user.home }}/.bash_profile"
    remote_src: yes
    mode: 0640
    owner: "{{ galaxy_user.name }}"
    group: "{{ galaxy_group.name | default(galaxy_group) }}"
  when: not bashprofile_stat_out.stat.exists and not profile_stat_out.stat.exists

- name: Insert some aliases
  blockinfile:
    path: "{{ galaxy_user.home }}/.bashrc"
    marker: "# {mark} ANSIBLE MANAGED BLOCK"
    content: |
      # User specific aliases and functions
      function change_to_wd() {
      USAGE="Please provide a Galaxy job ID or a Condor job ID"
      if (( $# == 0 )); then
              echo $USAGE
              return 0;
      fi
      for i in "$@"; do
                      if [[ "$i" = --help || "$i" = -h ]]; then
                              echo $USAGE
                              return 0;
                      fi
      done
      JID=$1
      WD=$(dirname `condor_q -autoformat Cmd ClusterId | grep ${JID} | cut -f1 -d' '` || dirname `condor_history -autoformat Cmd ClusterId | grep ${JID} | cut -f1 -d' '` || find "{{ galaxy_config['galaxy']['job_working_directory'] }}""/0"${JID:0:2}"/"${JID:2:3} -maxdepth 1 -type d -name ${JID})
      cd $WD
      }

      alias gl='journalctl  -f -u galaxy-*'
      alias glg='journalctl -fu galaxy-gunicorn@* | grep -v -e "/api/upload/hooks" -e "/history/current_history_json"'
      alias glh='journalctl -f -u galaxy-handler@*'
      alias glw='journalctl -f -u galaxy-workflow-scheduler@*'
      alias glc='journalctl -fu galaxy-celery@*'
      alias cu='journalctl -u galaxy-gunicorn@*.service --since "10 minutes ago" | grep "/history/current_history_json"  | awk "{print \$11}" | sort -u | wc -l'
      alias chg2wd='change_to_wd'

- name: Insert some export vars
  lineinfile:
    path: "{{ galaxy_user.home }}/.bashrc"
    line: "export GALAXY_CONFIG_FILE={{ galaxy_config_file }}"

- name: Check for bash_history
  stat:
    path: "{{ galaxy_user.home }}/.bash_history"
  register: bashhistory_stat_out

- name: Create bash_history
  file:
    path: "{{ galaxy_user.home }}/.bash_history"
    state: touch
    mode: 0640
    owner: "{{ galaxy_user.name }}"
    group: "{{ galaxy_group.name | default(galaxy_group) }}"
  when: not bashhistory_stat_out.stat.exists
