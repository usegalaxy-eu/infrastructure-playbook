---
# packages
software_groups_to_install:
  - admin
  - debug
  - editors
  - pdf_export_deps
  - services
  - terminals
  - utils

# Docker
docker_users:
  - galaxy

# Autofs
autofs_service.install: true
autofs_service.enable: true
nfs_kernel_tuning: true

autofs_mount_points:
  - data
  - gxtest
  - gxkey
  - jwd
  - usrlocal
  - cache
  - misc

# Miniconda role variables (galaxyproject.miniconda)
conda_prefix: /opt/miniconda

# FirewallD
firewall_internal_services:
  - http
  - https
  - ssh
  - mosh
firewall_public_services:
  - http
  - https
firewall_mosh_service: >
  <?xml version="1.0" encoding="utf-8"?>
  <service>
    <short>MOSH</short>
    <description>Mosh (mosh.mit.edu) is a free replacement for SSH that allows roaming and supports intermittent connectivity.</description>
    <port protocol="udp" port="60001-60100"/>
  </service>

# fs-maintenance
fsm_maintenance_dir: "/data/dnb01/maintenance"
fsm_cron_tasks:
  docker:
    enable: true
    name: "Docker clean up"
    minute: 30
    hour: 2
    dom: "*"
    month: "*"
    dow: "*"
    job: ". {{ galaxy_root }}/.bashrc && docker system prune -f > /dev/null"
    user: "{{ fsm_galaxy_user.username }}"
  gxadmin:
    enable: false
    name: "Gxadmin Galaxy clean up"
    minute: 0
    hour: 0
    dom: "*/2"
    month: "*"
    dow: "*"
    job: "{{ custom_telegraf_env }} /usr/bin/gxadmin galaxy cleanup 60"
    user: "{{ fsm_galaxy_user.username }}"

# TIaaS
tiaas_virtualenv_python: "python3.8"

# Telegraf
telegraf_agent_hostname: "{{ hostname }}"
telegraf_agent_version: 1.17.2
custom_telegraf_env: "/usr/bin/env GDPR_MODE=1 PGUSER={{ galaxy_user.name }} PGHOST={{ postgres_host }} GALAXY_ROOT={{ galaxy_server_dir }} GALAXY_CONFIG_FILE={{ galaxy_config_file }} GALAXY_LOG_DIR={{ galaxy_log_dir }} GXADMIN_PYTHON={{ galaxy_venv_dir }}/bin/python"
telegraf_plugins_extra:
  listen_galaxy_routes:
    plugin: "statsd"
    config:
      - service_address = ":8125"
      - percentiles = [90]
      - metric_separator = "."
      - allowed_pending_messages = 10000
      - percentile_limit = 100

  # Some custom galaxy monitoring stuff that can only run on the Galaxy server
  galaxy_lastlog:
    plugin: "exec"
    config:
      - commands = ["{{ custom_telegraf_env }} /usr/bin/gxadmin gunicorn lastlog"]
      - timeout = "15s"
      - data_format = "influx"
      - interval = "15s"
  galaxy_active_users:
    plugin: "exec"
    config:
      - commands = ["/usr/bin/gxadmin gunicorn active-users"]
      - timeout = "90s"
      - data_format = "influx"
      - interval = "5m"

# Custom pip installer
pip_venv_path: "{{ galaxy_venv_dir }}"
pip_install_dependencies:
  # celery and flower
  - redis
  - flower
  # phdcomics
  - beautifulsoup4
  # Used by code_files for apollo
  - biopython
  - bcbio-gff
  # Needed for tool watching
  - watchdog
  # Needed gxadmin graphs
  - data_hacks
  # used by reports
  - WeasyPrint
  - nbconvert
  - gitlab-arc-fs
  # Needed for usegalaxy-eu.vgcn-monitoring Telegraf role
  - pyyaml
  - GitPython
  - python-openstackclient
  # WallE
  - tqdm # progress bar, has no dependencies

yum_exclude_repos:
  - condor*
  - npm*

all_yum_repositories:
  - name: galaxy_gpel
    description: Galaxy Packages for Enterprise Linux $releasever - $basearch
    baseurl: https://depot.galaxyproject.org/yum/el/$releasever/$basearch/
    enabled: true
    gpgcheck: false
    retries: 1
    timeout: 10

# Certbot
certbot_virtualenv_package_name: python3-virtualenv
certbot_dns_provider: route53
certbot_auth_method: --standalone
certbot_domains: "{{ server_names }}"
certbot_post_renewal: |
  systemctl restart nginx || true
certbot_share_key_users:
  - nginx

# AWS Credentials for certbot-route53
aws_cli_credentials:
  - access_key: "{{ aws_credentials.certbot.AWS_ACCESS_KEY }}"
    secret_key: "{{ aws_credentials.certbot.AWS_SECRET_KEY }}"
    homedir: /root
    owner: root
    group: root

# rsync to nfs
galaxy_nfs_location: /data/gxkey

# Nginx
nginx_servers:
  - redirect-ssl
nginx_ssl_servers:
  - galaxyproject
  - telescope-ssl
  - galaxy-main
  - galaxy-ie-main
  - galaxy-test-proxy
nginx_conf_http:
  client_max_body_size: 1g
  proxy_cache_path: "/tmp/nginx-cache levels=1:2 keys_zone=STATIC:10m inactive=24h  max_size=1g"
  gzip: "on"
  gzip_proxied: any
  # The ngx_http_gzip_static_module module allows sending precompressed files with the “.gz” filename extension instead of regular files.
  gzip_static: "on"
  gzip_http_version: "1.1"
  gzip_disable: '"MSIE [1-6]\."'
  gzip_vary: "on"
  gzip_comp_level: 6
  gzip_types: |
    text/plain
    text/css
    text/xml
    text/javascript
    application/javascript
    application/x-javascript
    application/json
    application/xml
    application/xml+rss
    application/xhtml+xml
    application/x-font-ttf
    application/x-font-opentype
    image/png
    image/svg+xml
    image/x-icon
  gzip_buffers: "16 8k"
  gzip_min_length: 128
nginx_enable_default_server: false
nginx_flavor: ""

# Nginx Letsencrypt bindings
nginx_ssl_role: usegalaxy-eu.certbot
nginx_conf_ssl_certificate: /etc/ssl/certs/fullchain.pem
nginx_conf_ssl_certificate_key: /etc/ssl/user/privkey-nginx.pem

# Dynmotd
dynmotd_custom:
  - name: Condor
    command: "condor_q -totals | tail -n 2"

# TPV Script
tpv_config_dir_name: total_perspective_vortex

# CVMFS
cvmfs_role: client
galaxy_cvmfs_repos_enabled: config-repo

galaxy_cvmfs_server_urls:
  - domain: galaxyproject.org
    urls:
      - "http://cvmfs1-ufr0.galaxyproject.eu/cvmfs/@fqrn@"

# SystemD
galaxy_systemd_mode: "gunicorn"
galaxy_systemd_gunicorns: 7
galaxy_systemd_gunicorn_workers: 4
galaxy_systemd_gunicorn_timeout: 600
galaxy_systemd_handlers: 6
galaxy_systemd_workflow_schedulers: 3

galaxy_systemd_gunicorn_env: "{{ apollo_env }} GALAXY_DROPBOX_APP_CLIENT_ID={{ dropbox_app_client_id }} GALAXY_DROPBOX_APP_CLIENT_SECRET={{ dropbox_app_client_secret }} GALAXY_GOOGLE_DRIVE_APP_CLIENT_ID={{ google_drive_oauth_client_id }} GALAXY_GOOGLE_DRIVE_APP_CLIENT_SECRET={{ google_drive_oauth_client_secret }}"
galaxy_systemd_handler_env: "{{ galaxy_systemd_gunicorn_env }}"
galaxy_systemd_workflow_scheduler_env: "{{ galaxy_systemd_gunicorn_env }}"

galaxy_systemd_memory_limit: 25
galaxy_systemd_memory_limit_handler: 30
galaxy_systemd_memory_limit_workflow: 15

# gie_proxy
gie_proxy_dir: "{{ galaxy_root }}/gie-proxy/proxy"
gie_proxy_git_version: v0.1.0
gie_proxy_setup_nodejs: nodeenv
gie_proxy_virtualenv_command: "{{ conda_prefix }}/envs/_galaxy_/bin/python -m venv --copies" #"{{ pip_virtualenv_command }}"
gie_proxy_nodejs_version: "14.21.3"
gie_proxy_virtualenv: "{{ galaxy_root }}/gie-proxy/venv"
gie_proxy_setup_service: systemd
gie_proxy_service_restart_mode: always
gie_proxy_service_restartsec: 2s
gie_proxy_sessions_path: "{{ interactivetools_db_connection }}"
gie_proxy_path_prefix: /interactivetool/ep
gie_proxy_port: 8800
gie_proxy_verbose: true

# gxadmin
postgres_user: galaxy
postgres_host: sn05.galaxyproject.eu
postgres_port: 5432

# GRT
galaxy_grt_exporter: galaxy
galaxy_grt_uploader: galaxy

# Influx Notifier
gxadmin_influx_task_notifier: true
gxadmin_influx_task_notifier_db: notifications

# postgres_pass defined in secret_group_vars/all.yml
gxadmin_commit: main
gxadmin_dir: /opt/gxadmin
gxadmin_bin_dir: /usr/bin
gxadmin_force: true

# GALAXY
galaxy_group:
  name: galaxy
  gid: 999
galaxy_system_group: galaxy
galaxy_log_dir: "/var/log/galaxy"
galaxy_layout: root-dir
galaxy_separate_privileges: true
galaxy_manage_paths: true
galaxy_build_client: false
galaxy_restart_handler_name: Restart Galaxy
galaxy_create_user: true
galaxy_user:
  name: galaxy
  create_home: true
  home: /opt/galaxy
  uid: 999
  shell: /bin/bash

# Galaxy configuration files will be written with these permissions (mode argument to Ansible copy/template module)
galaxy_config_perms: 0644

galaxy_root: /opt/galaxy
galaxy_workflow_scheduler_count: "{{ galaxy_systemd_workflow_schedulers }}"
galaxy_home_dir: /opt/galaxy
galaxy_mutable_config_dir: "{{ galaxy_root }}/mutable-config"
galaxy_mutable_data_dir: "{{ galaxy_root }}/mutable-data"
galaxy_shed_tools_dir: "{{ galaxy_root }}/shed_tools"
galaxy_tool_data_path: "{{ galaxy_root }}/tool-data"
__galaxy_shed_tools_dir: "{{ galaxy_shed_tools_dir }}"
galaxy_backup_configfiles: false

galaxy_server_dir: "{{ galaxy_root }}/server"
galaxy_config_dir: "{{ galaxy_root }}/config"
galaxy_venv_dir: "{{ galaxy_root }}/venv"
galaxy_job_working_directory: "{{ galaxy_config['galaxy']['job_working_directory'] }}"
ucsc_build_sites:

galaxy_virtualenv_command: "{{ conda_prefix }}/envs/_galaxy_/bin/python -m venv --copies"
#galaxy_virtualenv_python: "python3.6"
galaxy_nonrepro_tools: "{{ galaxy_root }}/custom-tools"
galaxy_nonrepro_commit: master


# Custom override
# Our galaxy_tool_dependency_dir is on NFS, and permissions are set in such a
# way that they cannot be changed by the ansible connected user.
galaxy_dirs:
  - "{{ galaxy_mutable_data_dir }}"
  - "{{ galaxy_mutable_config_dir }}"
  - "{{ galaxy_cache_dir }}"
  - "{{ galaxy_shed_tools_dir }}"
  #- "{{ galaxy_tool_dependency_dir }}"
  - "{{ galaxy_file_path }}"
  - "{{ galaxy_job_working_directory }}"
  - "{{ galaxy_tool_data_path }}"
  - "{{ galaxy_nonrepro_tools }}"
  - "{{ galaxy_webhook_dir }}"
  - "{{ galaxy_tour_dir }}"
  - "{{ galaxy_log_dir }}"
  - "{{ galaxy_config_dir }}/total_perspective_vortex"
  - "{{ tpv_mutable_dir }}"

galaxy_instance_hostname: usegalaxy.eu
galaxy_config_style: yaml

galaxy_repo: "https://github.com/usegalaxy-eu/galaxy.git"
galaxy_commit_id: "release_24.2_europe"
galaxy_force_checkout: true # discard any modified files
#galaxy_admin_email_from: 'noreply@usegalaxy.eu'

galaxy_singularity_images_cvmfs_path: "/cvmfs/singularity.galaxyproject.org/all/"

galaxy_config: "{{ galaxy_config_hash }}"

# Galaxy Subdomains
galaxy_themes_ansible_file_path: /scratch/workspace/usegalaxy-eu/playbooks/sn06/files/galaxy/subdomains
galaxy_themes_default_welcome: https://galaxyproject.org/bare/eu/usegalaxy/main/
galaxy_themes_welcome_url_prefix: https://usegalaxy-eu.github.io/index-

galaxy_config_file_src_dir: files/galaxy
galaxy_config_files:
  # TODO(bgruening): sync this with cvmfs? can we have ours be just a small additional builds.txt?
  - src: "{{ galaxy_config_file_src_dir }}/config/builds.txt"
    dest: "{{ galaxy_config['galaxy']['builds_file_path'] }}"
  - src: "{{ galaxy_config_file_src_dir }}/config/data_manager_conf.xml"
    dest: "{{ galaxy_config['galaxy']['data_manager_config_file'] }}"
  - src: "{{ galaxy_config_file_src_dir }}/config/datatypes_conf.xml"
    dest: "{{ galaxy_config['galaxy']['datatypes_config_file'] }}"
  - src: "{{ galaxy_config_file_src_dir }}/config/dependency_resolvers_conf.xml"
    dest: "{{ galaxy_config['galaxy']['dependency_resolvers_config_file'] }}"
  - src: "{{ galaxy_config_file_src_dir }}/config/email_domain_blocklist.conf"
    dest: "{{ galaxy_config['galaxy']['email_domain_blocklist_file'] }}"
  - src: "{{ galaxy_config_file_src_dir }}/config/user_preferences_extra_conf.yml"
    dest: "{{ galaxy_config['galaxy']['user_preferences_extra_conf_path'] }}"
  - src: "{{ galaxy_config_file_src_dir }}/config/job_resource_params_conf.xml"
    dest: "{{ galaxy_config['galaxy']['job_resource_params_file'] }}"
  - src: "{{ galaxy_config_file_src_dir }}/config/trs_servers_conf.yml"
    dest: "{{ galaxy_config['galaxy']['trs_servers_config_file'] }}"
  # test? Unknown if this works.
  - src: "{{ galaxy_config_file_src_dir }}/config/error_report.yml"
    dest: "{{ galaxy_config_dir }}/error_report.yml"
  - src: "{{ galaxy_config_file_src_dir }}/config/job_metrics_conf.yml"
    dest: "{{ galaxy_config['galaxy']['job_metrics_config_file'] }}"
  - src: "{{ galaxy_config_file_src_dir }}/config/migrated_tools_conf.xml"
    dest: "{{ galaxy_config['galaxy']['migrated_tools_config'] }}"
  - src: "{{ galaxy_config_file_src_dir }}/config/tool_data_table_conf.xml"
    dest: "{{ galaxy_config_dir }}/tool_data_table_conf.xml"
  - src: "{{ galaxy_config_file_src_dir }}/config/tool_sheds_conf.xml"
    dest: "{{ galaxy_config['galaxy']['tool_sheds_config_file'] }}"
  - src: "{{ galaxy_config_file_src_dir }}/config/ucsc_build_sites.txt"
    dest: "{{ galaxy_config['galaxy']['ucsc_build_sites'] }}"
  - src: "{{ galaxy_config_file_src_dir }}/config/echo_main_env.xml"
    dest: "{{ galaxy_config_dir }}/echo_main_env.xml"
  - src: "{{ galaxy_config_file_src_dir }}/tpv/tool_defaults.yml"
    dest: "{{ tpv_mutable_dir }}/tool_defaults.yml"
  - src: "{{ galaxy_config_file_src_dir }}/tpv/tools.yml"
    dest: "{{ tpv_mutable_dir }}/tools.yml"
  - src: "{{ galaxy_config_file_src_dir }}/tpv/roles.yml"
    dest: "{{ tpv_mutable_dir }}/roles.yml"
  - src: "{{ galaxy_config_file_src_dir }}/tpv/interactive_tools.yml"
    dest: "{{ tpv_mutable_dir }}/interactive_tools.yml"
  - src: "{{ galaxy_config_file_src_dir }}/tpv/users.yml"
    dest: "{{ tpv_mutable_dir }}/users.yml"

  #- src: files/galaxy/config/job_resource_params_conf.xml
  #dest: "{{ galaxy_config['app:main']['job_resource_params_file'] }}"
  #- src: files/galaxy/config/pulsar_stampede_actions.yml
  #dest: "{{ galaxy_config_dir }}/pulsar_stampede_actions.yml"
  #- src: files/galaxy/config/pulsar_bridges_actions.yml
  #dest: "{{ galaxy_config_dir }}/pulsar_bridges_actions.yml"
  #- src: files/galaxy/config/pulsar_jetstream.yml
  #dest: "{{ galaxy_config_dir }}/pulsar_jetstream.yml"
  #- src: files/galaxy/config/pulsar_jetstream_actions.yml
  #dest: "{{ galaxy_config_dir }}/pulsar_jetstream_actions.yml"

galaxy_config_template_src_dir: templates/galaxy
galaxy_config_templates:
  - src: "{{ galaxy_config_template_src_dir }}/config/build_sites.yml.j2"
    dest: "{{ galaxy_config['galaxy']['build_sites_config_file'] }}"
  - src: "{{ galaxy_config_template_src_dir }}/config/global_host_filters.py.j2"
    dest: "{{ galaxy_server_dir }}/lib/galaxy/tool_util/toolbox/filters/global_host_filters.py"
  - src: "{{ galaxy_config_template_src_dir }}/config/job_conf.yml.j2"
    dest: "{{ galaxy_config_dir }}/job_conf.yml"
  - src: "{{ galaxy_config_template_src_dir }}/config/container_resolvers_conf.xml.j2"
    dest: "{{ galaxy_config_dir }}/container_resolvers_conf.xml"
  - src: "{{ galaxy_config_template_src_dir }}/config/user_filters.py.j2"
    dest: "{{ galaxy_server_dir }}/lib/galaxy/tool_util/toolbox/filters/user_filters.py"
  - src: "{{ galaxy_config_template_src_dir }}/config/nagios_tool_conf.xml"
    dest: "{{ galaxy_config_dir }}/nagios_tool_conf.xml"
  - src: "{{ galaxy_config_template_src_dir }}/config/oidc_backends_config.xml"
    dest: "{{ galaxy_config['galaxy']['oidc_backends_config_file'] }}"
  - src: "{{ galaxy_config_template_src_dir }}/config/oidc_config.xml"
    dest: "{{ galaxy_config['galaxy']['oidc_config_file'] }}"
  - src: "{{ galaxy_config_template_src_dir }}/config/grt.yml.j2"
    dest: "{{ galaxy_config_dir }}/grt.yml"
  - src: "{{ galaxy_config_template_src_dir }}/config/pulsar_app.yml"
    dest: "{{ galaxy_config_dir }}/pulsar_app.yml"
  - src: "{{ galaxy_config_template_src_dir }}/config/tool_conf.xml.j2"
    dest: "{{ galaxy_config_dir }}/tool_conf.xml"
  - src: "{{ galaxy_config_template_src_dir }}/config/galaxy_workflow_scheduler.j2"
    dest: "{{ galaxy_config_dir }}/workflow_schedulers_conf.xml"
  - src: "{{ galaxy_config_template_src_dir }}/config/file_sources_conf.yml.j2"
    dest: "{{ galaxy_config_dir }}/file_sources_conf.yml"
  - src: "{{ galaxy_config_template_src_dir }}/config/object_store_conf.xml.j2"
    dest: "{{ galaxy_config['galaxy']['object_store_config_file'] }}"
  - src: "{{ galaxy_config_file_src_dir }}/tpv/destinations.yml.j2"
    dest: "{{ tpv_mutable_dir }}/destinations.yml"
  - src: '{{ galaxy_config_template_src_dir }}/config/vault_conf.yml.j2'
    dest: '{{ galaxy_config_dir }}/vault_conf.yml'
  - src: '{{ galaxy_config_template_src_dir }}/config/file_source_templates.yml.j2'
    dest: "{{ galaxy_config['galaxy']['file_source_templates_config_file'] }}"
  - src: '{{ galaxy_config_template_src_dir }}/config/object_store_templates.yml.j2'
    dest: "{{ galaxy_config['galaxy']['object_store_templates_config_file'] }}"
