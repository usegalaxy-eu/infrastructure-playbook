---
- name: MQ
  hosts: mq
  become: true
  vars_files:
    - secret_group_vars/all.yml
    - secret_group_vars/aws.yml # AWS creds
    - secret_group_vars/pulsar.yml     # Pulsar + MQ Connections
  collections:
    - devsec.hardening
  pre_tasks:
    #    - name: Set default version of Python
    #      alternatives:
    #        name: python
    #        path: /usr/bin/python3
    - name: Install docker pip package
      ansible.builtin.pip:
        name: docker
    - name: Set docker_users (Docker role)
      ansible.builtin.set_fact:
        docker_users: "centos"
    - name: Configure SELinux
      ansible.posix.seboolean:
        name: "{{ item }}"
        state: true
        persistent: true
      loop:
        - httpd_can_network_connect
    - name: Change the redis_t domain to permissive
      community.general.selinux_permissive:
        name: redis_t
        permissive: true
    - name: Disable firewalld service
      ansible.builtin.service:
        name: firewalld
        enabled: true
        state: started
    - name: Open ports for redis
      ansible.posix.firewalld:
        port: 6379/tcp
        permanent: true
        state: enabled
    - name: Open ports for rabbitmq
      ansible.posix.firewalld:
        service: "{{ item }}"
        permanent: true
        state: enabled
      loop:
        - amqp
        - amqps
        - https
        - http
    - name: Create redis group
      ansible.builtin.group:
        name: redis
    - name: Create redis user
      ansible.builtin.user:
        name: redis
        group: redis
        home: /var/lib/redis
        create_home: true
        shell: /bin/false
        #    - name: Create redis db dir
        #      ansible.builtin.file:
        #        path: /var/lib/redis
        #        owner: redis
        #        group: redis
        #        state: directory
        #        mode: 755
    - name: Create redis log dir
      ansible.builtin.file:
        path: /var/log/redis
        owner: redis
        group: redis
        state: directory
        mode: 755
    - name: Touches redis
      ansible.builtin.file:
        path: /var/log/redis/redis-server.log
        owner: redis
        group: redis
        state: touch
        mode: 644
  roles:
    ## Starting configuration of the operating system
    - role: usegalaxy_eu.handy.os_setup
      vars:
        enable_hostname: true
        enable_powertools: true        # geerlingguy.repo-epel role doesn't enable PowerTools repository
        enable_remap_user: true
        enable_create_user: true
    - geerlingguy.repo-epel     # Install EPEL repository
    - usegalaxy-eu.autoupdates  # keep all of our packages up to date
    - influxdata.chrony         # Keep our time in sync.
    # Applications
    - geerlingguy.docker
    - hxr.aws-cli # Setup the AWS client that will be needed for route53 authentication of certbot. MUST come before nginx role
    - galaxyproject.nginx
    - usegalaxy_eu.rabbitmqserver
    - geerlingguy.redis
    - dj-wasabi.telegraf
    # hardening
    - os_hardening
    - ssh_hardening
