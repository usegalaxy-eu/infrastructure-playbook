---
- name: Grafana
  hosts: grafana
  vars_files:
    - secret_group_vars/all.yml
  pre_tasks:
    #- name: Put SELinux in permissive mode, logging actions that would be blocked.
    #  # Putting SELinux in permissive mode should not be necessary. But if
    #  # certs fail, then do it. It is supposed to be properly handled by
    #  # the `galaxyproject.nginx` role, but the permission change is likely
    #  # only applied if a change is detected since it can't figure out if
    #  # the rule is there or not.
    #  # TODO: make the nginx task check if the rule is in place, rather than a change in path.
    #  become: true
    #  ansible.posix.selinux:
    #    policy: targeted
    #    state: permissive
    - name: Install Dependencies
      become: true
      ansible.builtin.package:
        name: ["python3-virtualenv"]
    - name: Ensure git is installed. (hxr.monitor-ssl)
      become: true
      ansible.builtin.package:
        name:
          - git
  collections:
    - devsec.hardening
    - grafana.grafana
  roles:
    ## Starting configuration of the operating system
    - role: usegalaxy_eu.firewall
      become: true
    - role: geerlingguy.repo-epel # Install EPEL repository
      become: true
    - role: usegalaxy_eu.handy.os_setup
      become: true
      vars:
        hostname: "{{ grafana_domain }}"
        enable_hostname: true
        enable_powertools: true # geerlingguy.repo-epel role doesn't enable PowerTools repository
    - role: usegalaxy-eu.autoupdates # keep all of our packages up to date
      become: true
      vars:
        hostname: "{{ grafana_domain }}"
    - influxdata.chrony # Keep our time in sync.

    ## Monitoring
    - dj-wasabi.telegraf
    - role: hxr.monitor-ssl
      become: true
    - role: hxr.monitor-email
      become: true

    ## Grafana
    - role: galaxyproject.nginx
      become: true
    - grafana
    - role: pgs
      become: true
    - usegalaxy_eu.grafana_matrix_forwarder

  post_tasks:
    - name: Open nginx ports
      become: true
      ansible.posix.firewalld:
        port: "{{ item }}"
        permanent: true
        state: enabled
      with_items:
        - 80/tcp
        - 443/tcp
